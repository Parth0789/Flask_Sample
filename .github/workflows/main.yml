name: Python Security Pipeline

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  sast-bandit:
    name: SAST with Bandit
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install Bandit
        run: pip install bandit

      - name: Run Bandit
        # Scans all python files in the repo, excludes the /tests directory,
        # and fails the job if any high or medium-confidence issues are found.
        run: bandit -r . -x ./tests -ll -c pyproject.toml

  dependency-scan-snyk:
    name: Dependency Scanning with Snyk
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: pip install -r requirements.txt

      - name: Run Snyk to check for vulnerabilities
        uses: snyk/actions/python-3.11@master
        env:
          # Required: Get your Snyk token from your account settings
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          # Fails the build for high-severity issues. Use --all-projects to scan all manifests.
          args: --severity-threshold=high

  container-scan-trivy:
    name: Container Scanning with Trivy
    runs-on: ubuntu-latest
    # This job assumes you have a Dockerfile
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Build a container image
        run: |
          docker build -t myapp:${{ github.sha }} .

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'myapp:${{ github.sha }}'
          format: 'table'
          exit-code: '1' # Fail the build if vulnerabilities are found
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH' # Only fail for Critical and High severity

  secret-scanning-gitleaks:
    name: Secret Scanning with Gitleaks
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run Gitleaks
        uses: gitleaks/gitleaks-action@v2
        # Gitleaks will scan the code and fail if it finds hardcoded secrets.
